// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'java'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

allprojects {
    version = 2
    group = 'com.globallogic.codingdojo'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects { proj ->
    apply plugin: 'jacoco'

    jacoco {
        version '0.7.2.201409121644'
    }

    task jacocoTestReport2(type: JacocoReport, dependsOn: "testDebugUnitTest") {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        reports {
            xml.enabled = true
            html.enabled = true
        }
        classDirectories = fileTree(
                dir: 'build/intermediates/classes/debug',
                excludes: ['**/R.class',
                           '**/R$*.class',
                           '**/*$ViewInjector*.*',
                           '**/*$ViewBinder*.*',
                           '**/*MembersInjector*.*',
                           '**/BuildConfig.*',
                           '**/Manifest*.*',
                           '**/*$Lambda$*.class',
                           '**/*Factory*.class',
                           '**/*$Builder*',
                           '**/*DaggerApplicationComponent*.class',
                           '**/api'])
        sourceDirectories = files('src/main/java')
        executionData = files('build/jacoco/testDebugUnitTest.exec')
        doFirst {
            files('build/intermediates/classes/debug').getFiles().each { file ->
                if (file.name.contains('$$')) {
                    file.renameTo(file.path.replace('$$', '$'))
                }
            }
        }
    }
}

jacoco {
    toolVersion '0.7.2.201409121644'
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    group = "Reporting"
    description = 'Generates an aggregate report from all subprojects'
    //dependsOn(subprojects.jacocoTestReport2)
    //this is considering just the 'app' module since it's the only one that has unit tests.
    dependsOn(subprojects.getAt(0).jacocoTestReport2)

    additionalSourceDirs = files('library/src/main/java')
    sourceDirectories = files('library/src/main/java')
    classDirectories = files('library/build/intermediates/classes/debug')
    executionData = files(subprojects.getAt(0).jacocoTestReport2.executionData)


    reports {
        html.enabled = true
        xml.enabled = true
    }

    onlyIf = {
        true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    sourceDirs = files('library/src/main/java').flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    group = 'Coverage reports'
    description = 'Uploads the aggregated coverage report to Coveralls'

    dependsOn jacocoRootReport
    onlyIf { System.env.'CI' }
}